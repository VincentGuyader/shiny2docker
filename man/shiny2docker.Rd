% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny2docker.R
\name{shiny2docker}
\alias{shiny2docker}
\title{shiny2docker}
\usage{
shiny2docker(path = ".", lockfile = "renv.lock", output = "Dockerfile")
}
\arguments{
\item{path}{Character. Path to the folder containing the Shiny application (e.g., \code{app.R} or \code{ui.R} and \code{server.R}) along with any other necessary files.}

\item{lockfile}{Character. Path to the \code{renv.lock} file that specifies the R package dependencies. If the \code{renv.lock} file does not exist, it will be created for production using the \code{attachment::create_renv_for_prod} function.}

\item{output}{Character. Path to the generated Dockerfile. Defaults to \code{"Dockerfile"}.}
}
\value{
An object of class \code{dockerfiler}, representing the generated Dockerfile. This object can be further manipulated using \code{dockerfiler} functions before being written to disk.
}
\description{
Generate a Dockerfile for a Shiny Application
}
\details{
Automate the creation of a Dockerfile tailored for deploying Shiny applications. It manages R dependencies using \code{renv}, generates a \code{.dockerignore} file to optimize the Docker build process, and leverages the \code{dockerfiler} package to allow further customization of the Dockerfile object before writing it to disk.
}
\examples{
\dontrun{
  # Generate Dockerfile in the current directory
  shiny2docker(path = ".")

  # Generate Dockerfile with a specific renv.lock and output path
  shiny2docker(path = "path/to/shiny/app",
              lockfile = "path/to/shiny/app/renv.lock",
              output = "path/to/shiny/app/Dockerfile")

  # Further manipulate the Dockerfile object
  docker_obj <- shiny2docker()
  docker_obj$ENV("MY_ENV_VAR", "value")
  docker_obj$write("Dockerfile")
}
}
